#
# This makefile has the rules necessary for making the custom version of nrnoc
# called "special" from various mod files.  The variable "MODOBJFILES" should
# be set on the command line to list the .o files that are needed.
#
prefix = /usr/local/nrn
exec_prefix = /usr/local/nrn/x86_64

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/share/info
mandir = ${prefix}/share/man
includedir = ${prefix}/include

pkgdatadir = $(datadir)/nrn
pkglibdir = $(libdir)/nrn
pkgincludedir = $(includedir)/nrn
libobjdir = $(libdir)

DEFS = -DHAVE_CONFIG_H
LDFLAGS = 
LIBS =  -lm -ldl
X_CFLAGS = 
X_LIBS =  -lX11
X_EXTRA_LIBS = 
X_PRE_LIBS =  -lSM -lICE

INCLUDES = -I. -I$(pkgincludedir) -I$(libdir)

LIBTOOL = $(pkgdatadir)/libtool
CC = gcc
CFLAGS = -g -O2
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS)

NRNOCLIBS = -L$(libdir) $(libdir)/libnrnoc.la -loc -lmemacs \
	-lscopmath -lsparse13 -lreadline -lncurses \
	$(X_PRE_LIBS) $(X_LIBS) $(X_EXTRA_LIBS)

NRNOCOBJS = $(libobjdir)/ocmain.o $(libobjdir)/nrnnoiv.o $(libobjdir)/ocnoiv.o

.SUFFIXES:
.SUFFIXES: .c .mod .o
#
# How to make a .o file from a .mod file.  Note that we have to delete the
# .c file, or else make will get confused.  We have to go directly from
# a .mod to a .o file because otherwise GNU make will try to use a rule
# involving m2c.  Argh!!  Why did they have to build in so many implicit
# rules?
# 
#.mod.o:
#	$(bindir)/nocmodl $* || (rm -f $*.c; exit 1)
#	$(COMPILE) -c $*.c
#	rm -f $*.c
#
# some experimentation gave promising results for the following.
# it remains to be seen how portable it is. It seems to work
# for gnu make and the /usr/ccs/bin/make distributed with solaris.

#%.o : %.mod

.mod.c:
	$(bindir)/nocmodl $*
	
.c.o:
	$(COMPILE) -c $*.c

.mod.o:
	$(bindir)/nocmodl $*
	$(COMPILE) -c $*.c

mod_func.o: mod_func.c
	$(COMPILE) -c $<

special: $(MODOBJFILES) mod_func.o
	$(LINK) -o special $(NRNOCOBJS) $(MODOBJFILES) mod_func.o $(NRNOCLIBS) $(LIBS)
