$date
	Tue Feb 18 14:32:07 2014
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$scope module test $end
$var wire 1 ! cout $end
$var wire 1 " result $end
$var reg 1 # cin $end
$var reg 2 $ op [1:0] $end
$var reg 1 % x $end
$var reg 1 & y $end
$scope module b0 $end
$var wire 1 ' carryin $end
$var wire 1 ! carryout $end
$var wire 2 ( control [1:0] $end
$var wire 1 ) in $end
$var wire 1 * in1 $end
$var wire 1 + in2 $end
$var wire 1 " result $end
$var wire 1 , w0 $end
$var wire 1 - w1 $end
$var wire 1 . w2 $end
$scope module f0 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 ! cin $end
$var wire 1 ! cout $end
$var wire 1 . sum $end
$upscope $end
$scope module m0 $end
$var wire 1 , in1 $end
$var wire 1 - in2 $end
$var wire 1 . in3 $end
$var wire 2 / select [1:0] $end
$var reg 1 0 out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x0
bx /
x.
x-
0,
0+
1*
z)
bx (
x'
0&
1%
bx $
x#
x"
x!
$end
#10
00
0"
b0 $
b0 (
b0 /
0#
0'
#30
x0
x"
b10 (
b10 /
b10 $
#60
b11 $
b11 (
b11 /
#100
