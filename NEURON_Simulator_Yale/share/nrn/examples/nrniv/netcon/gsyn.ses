{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin ArtCellGUI[0]
{
load_file("netbild.hoc")
}
ocbox_ = new ArtCellGUI(1)
{object_push(ocbox_)}
{
tobj = new MechanismStandard("NetStim")
tobj.set("interval", 10, 0)
tobj.set("number", 10, 0)
tobj.set("start", 10, 0)
tobj.set("noise", 0, 0)
}
{append(tobj, "S1")}
{
tobj = new MechanismStandard("NetStim")
tobj.set("interval", 40, 0)
tobj.set("number", 2, 0)
tobj.set("start", 35, 0)
tobj.set("noise", 0, 0)
}
{append(tobj, "S2")}
{object_pop()}
{
ocbox_.map("ArtCellGUI[0]", 393, 64, 449.28, 291.84)
}
objref ocbox_
//End ArtCellGUI[0]


//Begin NetReadyCellGUI[0]
{
load_file("netbild.hoc")
}
{ocbox_ = new NetReadyCellGUI(1)}
{ocbox_.tobj = new CellBuild(1)}
{object_push(ocbox_.tobj)}
{
version(5.7)
continuous = 0
}
{object_push(topol)}
{
first = 0
slist.remove_all()
sname = "dend"
objref tobj
}
{
tobj = new CellBuildSection("soma",0, 0, tobj, 0) slist.append(tobj)
  tobj.position(0,0,15,0) tobj.lx=7.5 tobj.ly=0 tobj.i3d=0
all_init()
}
for i=0, slist.count-1 {slist.object(i).rdses()}
{object_pop()}
{
}
{object_push(subsets)}
{first = 0}
{ tobj = snlist.object(0)}
{consist()}
{object_pop()}
{
}
{object_push(geom)}
{
first = 0
tobj = new GeoSpec(4)
tobj.value = 100
bild.topol.slist.object(0).geo.append(tobj)
set_default()
}
{object_pop()}
{
}
{object_push(memb)}
{first=0}
{
tobj = new FakeMechStan(1)
tobj.value = 1
tobj.set_default()
tobj = new MStanWrap(tobj, 0)
bild.subsets.snlist.object(0).ml.append(tobj)
}
{
tobj = new MechanismStandard("pas")
tobj.set("g_pas", 0.001, 0)
tobj.set("e_pas", -70, 0)
tobj = new MStanWrap(tobj, 1)
bild.subsets.snlist.object(0).ml.append(tobj)
}
{object_pop()}
{
}
{object_push(manage)}
{
first = 0
classname = "Cell"
etop=1 esub=1 egeom=1 emem=1
itop=1 isub=0 igeom=0 imem=0
bild.topol.names_off = 0
bild.topol.circles_off = 0
output_index = 0  output_x = 1
thresh = 10
}
{object_pop()}
{
cexport()
}
{object_pop()}
{
save_window_=ocbox_.tobj.gtopol
save_window_.size(-200,200,-150,150)
scene_vector_[2] = save_window_
ocbox_.tobj.gtopol = save_window_
save_window_.save_name("ocbox_.tobj.gtopol")
}
{object_push(ocbox_)}
stgui = new SynTypeGUI(1)
{object_push(stgui)}
{
tobj = new MechanismStandard("GSyn")
tobj.set("tau1", 0.1, 0)
tobj.set("tau2", 1, 0)
tobj.set("Gtau1", 20, 0)
tobj.set("Gtau2", 21, 0)
tobj.set("Ginc", 1, 0)
tobj.set("e", 0, 0)
}
{append(tobj, "G")}
{object_pop()}
nrc = new NetReadyCell(tobj, stgui.stypelist)
nrc.name = "C"
tobj = nrc.cb.topol.slist.object(0)
{nrc.synlist.append(new SynTypeInstance(nrc.stype.object[0],tobj,0.5,0.5,-1))}
{g.size(-166.667,166.667,-125,125)}
{object_pop()}
{
ocbox_.map("NetReadyCellGUI[0]", 777, 26, 404.16, 361.92)
}
objref ocbox_
//End NetReadyCellGUI[0]


//Begin NetGUI[0]
{
load_file("netbild.hoc")
}
{ocbox_ = new NetGUI(1)}
{object_push(ocbox_)}
{mapold2new = new Vector()  missing = new List()}
original_type("C")
original_type("S1")
original_type("S2")
newnode(0, 22, 10)
newnode(1, -45, 35)
newnode(2, -55, -29)
newedge(1, 0, 0, 0.001, 1)
newedge(2, 0, 0, 0.0005, 1)
{create_ = 1  create1()}
{g.size(-166.667,166.667,-125,125)}
{set_alias(0)}
{object_pop()}
{
ocbox_.map("NetGUI[0]", 599, 140, 528, 327.36)
}
objref ocbox_
//End NetGUI[0]


//Begin SpikePlot[1] for NetData[0]
{
load_file("netbild.hoc")
}
{ocbox_ = new SpikePlot(NetData[0],1)}
{object_push(ocbox_)}
mode = 1
spikeplotstyle= 0
marksize= 4
markcolor= 1
useline= 1
fwindow = 100
binwidth = 1
build()
subset_start=0
subset_end = 3
{g.size(0,100,0,4)}
{object_pop()}
{
ocbox_.map("SpikePlot[1] for NetData[0]", 766, 512, 304.32, 333.12)
}
objref ocbox_
//End SpikePlot[1] for NetData[0]

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 100
xvalue("t","t", 2 )
tstop = 100
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0.04
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(71,161)
}
{
save_window_ = new Graph(0)
save_window_.size(0,110,0,0.0061)
scene_vector_[6] = save_window_
{save_window_.view(0, 0, 110, 0.0061, 408, 516, 300.48, 200.32)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addvar("GSyn[0].g", 1, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
